@import "./hamburger.css";
@import url("https://fonts.googleapis.com/css2?family=Space+Mono:wght@400;700&family=JetBrains+Mono:wght@400;500;700;800&family=Inter:wght@400;500;600;700;900&display=swap");
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Brutalist Light Theme */
    --background: 60 100% 97%; /* Off-white/cream */
    --foreground: 0 0% 0%; /* Pure black */

    --card: 45 100% 95%; /* Light beige */
    --card-foreground: 0 0% 0%;

    --popover: 45 100% 95%;
    --popover-foreground: 0 0% 0%;

    --primary: 350 100% 50%; /* Hot pink/red */
    --primary-foreground: 0 0% 100%;

    --secondary: 220 100% 50%; /* Electric blue */
    --secondary-foreground: 0 0% 100%;

    --muted: 0 0% 85%;
    --muted-foreground: 0 0% 20%;

    --accent: 45 100% 50%; /* Orange */
    --accent-foreground: 0 0% 0%;

    --destructive: 0 100% 50%;
    --destructive-foreground: 0 0% 100%;

    --border: 0 0% 0%;
    --input: 0 0% 100%;
    --ring: 350 100% 50%;

    --radius: 0rem;

    /* Custom brutalist colors */
    --brutal-yellow: 60 100% 50%;
    --brutal-green: 120 100% 40%;
    --brutal-purple: 280 100% 50%;
  }

  .dark {
    /* Brutalist Dark Theme */
    --background: 0 0% 5%; /* Near black */
    --foreground: 60 100% 97%; /* Off-white */

    --card: 0 0% 10%;
    --card-foreground: 60 100% 97%;

    --popover: 0 0% 10%;
    --popover-foreground: 60 100% 97%;

    --primary: 350 100% 60%; /* Hot pink */
    --primary-foreground: 0 0% 0%;

    --secondary: 220 100% 60%; /* Electric blue */
    --secondary-foreground: 0 0% 0%;

    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 80%;

    --accent: 45 100% 60%; /* Orange */
    --accent-foreground: 0 0% 0%;

    --destructive: 0 100% 60%;
    --destructive-foreground: 0 0% 0%;

    --border: 60 100% 97%;
    --input: 0 0% 15%;
    --ring: 350 100% 60%;

    --radius: 0rem;

    /* Custom brutalist colors */
    --brutal-yellow: 60 100% 60%;
    --brutal-green: 120 100% 50%;
    --brutal-purple: 280 100% 60%;
  }
}

* {
  box-sizing: border-box;
}

body {
  @apply bg-background text-foreground;
  font-family: "JetBrains Mono", "Space Mono", monospace;
  line-height: 1.6;
  letter-spacing: -0.02em;
}

/* Brutalist Typography Classes */
.brutal-heading {
  font-family: "Inter", sans-serif;
  font-weight: 900;
  text-transform: uppercase;
  letter-spacing: -0.05em;
  line-height: 0.9;
}

.brutal-shadow {
  text-shadow: 4px 4px 0px hsl(var(--primary));
}

.brutal-shadow-sm {
  text-shadow: 2px 2px 0px hsl(var(--primary));
}

.brutal-border {
  border: 3px solid hsl(var(--foreground));
}

.brutal-box-shadow {
  box-shadow: 6px 6px 0px hsl(var(--foreground));
}

.brutal-box-shadow-sm {
  box-shadow: 3px 3px 0px hsl(var(--foreground));
}

.brutal-box-shadow-color {
  box-shadow: 6px 6px 0px hsl(var(--primary));
}

/* Hover effects */
.brutal-hover:hover {
  transform: translate(-3px, -3px);
  box-shadow: 9px 9px 0px hsl(var(--foreground));
}

.brutal-click:active {
  transform: translate(3px, 3px);
  box-shadow: 3px 3px 0px hsl(var(--foreground));
}

html {
  scroll-behavior: smooth;
}

.filter-gray-color {
  filter: invert(44%) sepia(0%) saturate(22%) hue-rotate(138deg) brightness(93%)
    contrast(86%);
}

#globalLoader {
  position: fixed;
  z-index: 9999;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  display: flex;
}

.container {
  @apply max-w-3xl sm:max-w-4xl md:mx-auto px-10;
}

/* Brutalist Components */
.brutal-card {
  @apply brutal-border brutal-box-shadow bg-card;
  transition: all 0.2s ease;
}

.brutal-button {
  @apply brutal-border brutal-box-shadow bg-primary text-primary-foreground px-6 py-3 font-bold uppercase tracking-wider;
  transition: all 0.15s ease;
}

.brutal-button:hover {
  transform: translate(-3px, -3px);
  box-shadow: 9px 9px 0px hsl(var(--foreground));
}

.brutal-button:active {
  transform: translate(3px, 3px);
  box-shadow: 3px 3px 0px hsl(var(--foreground));
}

/* Glitch effect */
@keyframes glitch {
  0% {
    text-shadow: 2px 2px 0px hsl(var(--primary)),
      -2px -2px 0px hsl(var(--secondary));
  }
  25% {
    text-shadow: -2px 2px 0px hsl(var(--primary)),
      2px -2px 0px hsl(var(--secondary));
  }
  50% {
    text-shadow: 2px -2px 0px hsl(var(--primary)),
      -2px 2px 0px hsl(var(--secondary));
  }
  100% {
    text-shadow: 2px 2px 0px hsl(var(--primary)),
      -2px -2px 0px hsl(var(--secondary));
  }
}

.glitch-text {
  animation: glitch 0.3s infinite;
}

.glitch-hover:hover {
  animation: glitch 0.3s infinite;
}

/* Typing effect */
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink-cursor {
  0%,
  50% {
    opacity: 1;
  }
  51%,
  100% {
    opacity: 0;
  }
}

@keyframes cursor-fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes blink-dot {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  51% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

@keyframes show-and-blink {
  0% {
    opacity: 0;
  }
  99.9% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.typing-effect {
  overflow: hidden;
  white-space: nowrap;
  animation: typing 3.5s steps(50, end);
  position: relative;
}

.typing-effect::before {
  content: "";
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 3px;
  background: hsl(var(--primary));
  opacity: 1;
  animation: blink-cursor 1s infinite 3.5s, cursor-fade-out 0.1s ease-out 6s forwards;
}

.typing-effect::after {
  content: "â– ";
  color: hsl(var(--primary));
  position: absolute;
  right: 0px;
  bottom: 2px;
  font-size: 0.8em;
  line-height: 1;
  opacity: 0;
  transform: scale(0.4);
  animation: show-and-blink 6.5s forwards, blink-dot 1s infinite 6.5s;
}

/* Noise background */
.noise-bg::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.03;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100'%3E%3Cfilter id='noise'%3E%3CfeTurbulence baseFrequency='0.9' /%3E%3C/filter%3E%3Crect width='100' height='100' filter='url(%23noise)' /%3E%3C/svg%3E");
  pointer-events: none;
  z-index: 1;
}
